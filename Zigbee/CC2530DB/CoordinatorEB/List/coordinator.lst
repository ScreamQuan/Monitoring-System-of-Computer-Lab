###############################################################################
#                                                                             #
# IAR C/C++ Compiler V8.10.1.10194/W32 for 8051         21/Dec/2021  00:32:18 #
# Copyright 2004-2011 IAR Systems AB.                                         #
#                                                                             #
#    Core               =  plain                                              #
#    Code model         =  banked                                             #
#    Data model         =  large                                              #
#    Calling convention =  xdata reentrant                                    #
#    Constant location  =  data_rom                                           #
#    Dptr setup         =  1,16                                               #
#    Source file        =  C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\Source\coordinator.c              #
#    Command line       =  -f C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01 #
#                          ½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Sim #
#                          pleAPIHeartBeatExp2\CC2530DB\..\..\..\Tools\CC2530 #
#                          DB\f8wCoord.cfg (-DCPU32MHZ -DROOT=__near_func     #
#                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                   #
#                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8         #
#                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)    #
#                          -f C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01 #
#                          ½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Sim #
#                          pleAPIHeartBeatExp2\CC2530DB\..\..\..\Tools\CC2530 #
#                          DB\f8wConfig.cfg (-DZIGBEEPRO -DSECURE=0           #
#                          -DZG_SECURE_DYNAMIC=0 -DREFLECTOR                  #
#                          -DDEFAULT_CHANLIST=0x02000000                      #
#                          -DZDAPP_CONFIG_PAN_ID=0xFFF1                       #
#                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MA #
#                          SK=0x007F -DBEACON_REQUEST_DELAY=100               #
#                          -DBEACON_REQ_DELAY_MASK=0x00FF                     #
#                          -DLINK_STATUS_JITTER_MASK=0x007F                   #
#                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_PO #
#                          LLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7             #
#                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3    #
#                          -DNWK_MAX_DATA_RETRIES=2                           #
#                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9         #
#                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40           #
#                          -DNWK_MAX_BINDING_ENTRIES=4                        #
#                          -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x01,  #
#                          0x03, 0x05, 0x07, 0x09, 0x0B, 0x0D, 0x0F, 0x00,    #
#                          0x02, 0x04, 0x06, 0x08, 0x0A, 0x0C, 0x0D}"         #
#                          -DMAC_MAX_FRAME_SIZE=116                           #
#                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const     #
#                          __code" -DGENERIC=__generic                        #
#                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000        #
#                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)   #
#                          -DREJOIN_POLL_RATE=440 C:\Users\zjw\Desktop\¿Î³Ì\Î #
#                          ïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Project #
#                          s\zstack\Samples\SimpleAPIHeartBeatExp2\Source\coo #
#                          rdinator.c -D ZTOOL_P1 -D xMT_TASK -D              #
#                          xMT_SYS_FUNC -D xMT_ZDO_FUNC -D                    #
#                          xLCD_SUPPORTED=DEBUG -lC                           #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\CoordinatorEB\List\ -lA  #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\CoordinatorEB\List\      #
#                          --diag_suppress Pe001,Pa010 -o                     #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\CoordinatorEB\Obj\ -e    #
#                          --no_code_motion --debug --core=plain --dptr=16,1  #
#                          --data_model=large --code_model=banked             #
#                          --calling_convention=xdata_reentrant               #
#                          --place_constants=data_rom --nr_virtual_regs 16    #
#                          -I C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01 #
#                          ½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Sim #
#                          pleAPIHeartBeatExp2\CC2530DB\ -I                   #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\..\Source\ -I            #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\..\..\..\ZMain\TI2530DB\ #
#                           -I C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-0 #
#                          1½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Si #
#                          mpleAPIHeartBeatExp2\CC2530DB\..\..\..\..\..\Compo #
#                          nents\hal\include\ -I C:\Users\zjw\Desktop\¿Î³Ì\Îï #
#                          ÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects #
#                          \zstack\Samples\SimpleAPIHeartBeatExp2\CC2530DB\.. #
#                          \..\..\..\..\Components\hal\target\CC2530EB\ -I    #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\..\..\..\..\..\Component #
#                          s\mac\include\ -I C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍø #
#                          Í¨ÐÅ¼¼Êõ2021-01½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects\zst #
#                          ack\Samples\SimpleAPIHeartBeatExp2\CC2530DB\..\..\ #
#                          ..\..\..\Components\mac\high_level\ -I             #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\..\..\..\..\..\Component #
#                          s\mac\low_level\srf04\ -I                          #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\..\..\..\..\..\Component #
#                          s\mac\low_level\srf04\single_chip\ -I              #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\..\..\..\..\..\Component #
#                          s\mt\ -I C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2 #
#                          021-01½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Sampl #
#                          es\SimpleAPIHeartBeatExp2\CC2530DB\..\..\..\..\..\ #
#                          Components\osal\include\ -I                        #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\..\..\..\..\..\Component #
#                          s\services\saddr\ -I C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁ #
#                          ªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects\ #
#                          zstack\Samples\SimpleAPIHeartBeatExp2\CC2530DB\..\ #
#                          ..\..\..\..\Components\services\sdata\ -I          #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\..\..\..\..\..\Component #
#                          s\stack\af\ -I C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨Ð #
#                          Å¼¼Êõ2021-01½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack #
#                          \Samples\SimpleAPIHeartBeatExp2\CC2530DB\..\..\..\ #
#                          ..\..\Components\stack\nwk\ -I                     #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\..\..\..\..\..\Component #
#                          s\stack\sapi\ -I C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ #
#                          ¨ÐÅ¼¼Êõ2021-01½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects\zsta #
#                          ck\Samples\SimpleAPIHeartBeatExp2\CC2530DB\..\..\. #
#                          .\..\..\Components\stack\sec\ -I                   #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\..\..\..\..\..\Component #
#                          s\stack\sys\ -I C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ #
#                          ÐÅ¼¼Êõ2021-01½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects\zstac #
#                          k\Samples\SimpleAPIHeartBeatExp2\CC2530DB\..\..\.. #
#                          \..\..\Components\stack\zdo\ -I                    #
#                          C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\..\..\..\..\..\Component #
#                          s\zmac\ -I C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Ê #
#                          õ2021-01½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Sam #
#                          ples\SimpleAPIHeartBeatExp2\CC2530DB\..\..\..\..\. #
#                          .\Components\zmac\f8w\ -Ohz --require_prototypes   #
#    List file          =  C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\CoordinatorEB\List\coord #
#                          inator.lst                                         #
#    Object file        =  C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ #
#                          §ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\Simple #
#                          APIHeartBeatExp2\CC2530DB\CoordinatorEB\Obj\coordi #
#                          nator.r51                                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\zjw\Desktop\¿Î³Ì\ÎïÁªÍøÍ¨ÐÅ¼¼Êõ2021-01½ÌÑ§ÎÄ¼þ\ZStack-2.5.1a\Projects\zstack\Samples\SimpleAPIHeartBeatExp2\Source\coordinator.c
      1          #include "smartHome.h"
      2          #include "sapi.h"
      3          
      4          #include "osal.h"
      5          #include "hal_uart.h"
      6          #include "stdio.h"
      7          
      8          #define NUM_IN_CMD_COORINATOR 4
      9          #define NUM_OUT_CMD_COORINATOR 1
     10          void *alloceLedDeviceNode(uint8 lednum);
     11          void uart_receive(uint8 port,uint8 event);

   \                                 In  segment XDATA_ROM_C, align 1
     12          const cId_t coordinatorInputCommandList[NUM_IN_CMD_COORINATOR]=
   \                     coordinatorInputCommandList:
   \   000000   0100         DW 1
   \   000002   0300         DW 3
   \   000004   0400         DW 4
   \   000006   0500         DW 5
     13                                          {LEDJOINNET_CMD_ID,HEART_BEAT_CMD_ID,TEMPERATURE_BEAT_CMD_ID,LIGHT_BEAT_CMD_ID};

   \                                 In  segment XDATA_ROM_C, align 1
     14          const cId_t coordinatorOutputCommandList[NUM_OUT_CMD_COORINATOR]=
   \                     coordinatorOutputCommandList:
   \   000000   0200         DW 2
     15                                          {TOGGLE_LED_CMD_ID};
     16          struct led_device_node
     17          {
     18            struct led_device_node *next;
     19            uint8 shortAddr[2];
     20            uint8 lostHeartCount;
     21            uint8 flag[1];
     22          };
     23          

   \                                 In  segment XDATA_Z, align 1, keep-with-next
     24          static struct led_device_node ledDeviceHeader={NULL};
   \                     ledDeviceHeader:
   \   000000                DS 6
   \   000006                REQUIRE __INIT_XDATA_Z
     25          
     26          /*void *alloceLedDeviceNode(uint8 lednum)
     27          {
     28            return osal_mem_alloc(sizeof(struct led_device_node)-1+lednum);
     29          }
     30          */

   \                                 In  segment XDATA_ROM_C, align 1
     31          const SimpleDescriptionFormat_t zb_SimpleDesc=
   \                     zb_SimpleDesc:
   \   000000   01           DB 1
   \   000001   0105         DW 1281
   \   000003   0100         DW 1
   \   000005   00           DB 0
   \   000006   04           DB 4
   \   000007   ....         DW coordinatorInputCommandList
   \   000009   01           DB 1
   \   00000A   ....         DW coordinatorOutputCommandList
     32          {
     33            ENDPOINT_ID_SMARTHOME,
     34            PROFILE_ID_SMARTHOME,
     35            DEVICE_ID_COORDINATOR,
     36            DEVIDE_VERSION_ID,
     37            0,
     38            NUM_IN_CMD_COORINATOR,
     39            (cId_t*)coordinatorInputCommandList,
     40            NUM_OUT_CMD_COORINATOR,
     41            (cId_t*)coordinatorOutputCommandList  
     42          };
     43          /***********
     44          Ö´ÐÐÊ±»ú£º·¢ËÍµÄÊý¾Ý°ü±»½ÓÊÕ·½ÊÕµ½Ê±±»µ÷ÓÃ
     45          handle:°üµÄ±àºÅ£»
     46          status:ZSUCCESS±íÊ¾³É¹¦½ÓÊÕ
     47          ************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     48          void zb_SendDataConfirm( uint8 handle, uint8 status )
   \                     zb_SendDataConfirm:
     49          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     50            
     51          }
   \   000000   02....       LJMP    ?BRET
     52          
     53          /***********
     54          Ö´ÐÐÊ±»ú£º½ÓÊÕµ½Êý¾Ý°üÊ±±»µ÷ÓÃ
     55          ************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     56          void zb_ReceiveDataIndication( uint16 source, uint16 command, 
   \                     zb_ReceiveDataIndication:
     57                                        uint16 len, uint8 *pData  )
     58          {
   \   000000   74F1         MOV     A,#-0xf
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 102
   \   000005   749A         MOV     A,#-0x66
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   85..82       MOV     DPL,?XSP + 0
   \   00000D   85..83       MOV     DPH,?XSP + 1
   \   000010   EA           MOV     A,R2
   \   000011   F0           MOVX    @DPTR,A
   \   000012   A3           INC     DPTR
   \   000013   EB           MOV     A,R3
   \   000014   F0           MOVX    @DPTR,A
   \   000015   7477         MOV     A,#0x77
   \   000017   12....       LCALL   ?XSTACK_DISP0_8
   \   00001A   12....       LCALL   ??Subroutine6_0 & 0xFFFF
     59            if(command==LEDJOINNET_CMD_ID){
   \                     ??CrossCallReturnLabel_8:
   \   00001D   7401         MOV     A,#0x1
   \   00001F   6C           XRL     A,R4
   \   000020   7001         JNZ     ??zb_ReceiveDataIndication_0
   \   000022   ED           MOV     A,R5
   \                     ??zb_ReceiveDataIndication_0:
   \   000023   6003         JZ      $+5
   \   000025   02....       LJMP    ??zb_ReceiveDataIndication_1 & 0xFFFF
     60              char buf[100];
     61              struct led_device_node *p=ledDeviceHeader.next;
   \   000028   90....       MOV     DPTR,#ledDeviceHeader
   \   00002B   801B         SJMP    ??zb_ReceiveDataIndication_2
     62              while(p!=NULL)
     63              {
     64                if( pData[0]==p->flag[0])
   \                     ??zb_ReceiveDataIndication_3:
   \   00002D   8E82         MOV     DPL,R6
   \   00002F   8F83         MOV     DPH,R7
   \   000031   E0           MOVX    A,@DPTR
   \   000032   F8           MOV     R0,A
   \   000033   85..82       MOV     DPL,?V0 + 0
   \   000036   85..83       MOV     DPH,?V0 + 1
   \   000039   A3           INC     DPTR
   \   00003A   A3           INC     DPTR
   \   00003B   A3           INC     DPTR
   \   00003C   A3           INC     DPTR
   \   00003D   A3           INC     DPTR
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   68           XRL     A,R0
   \   000040   6074         JZ      ??zb_ReceiveDataIndication_4
     65                  break;
     66                else
     67                {
     68                  p=p->next;
   \   000042   85..82       MOV     DPL,?V0 + 0
   \   000045   85..83       MOV     DPH,?V0 + 1
   \                     ??zb_ReceiveDataIndication_2:
   \   000048   E0           MOVX    A,@DPTR
   \   000049   F5..         MOV     ?V0 + 0,A
   \   00004B   A3           INC     DPTR
   \   00004C   E0           MOVX    A,@DPTR
   \   00004D   F5..         MOV     ?V0 + 1,A
     69                }
     70              }
   \   00004F   E5..         MOV     A,?V0 + 0
   \   000051   45..         ORL     A,?V0 + 1
   \   000053   70D8         JNZ     ??zb_ReceiveDataIndication_3
     71              if(p==NULL)//ÐÂ½Úµã¼ÓÈë
     72              {
     73                struct led_device_node *np=(struct led_device_node *)osal_mem_alloc(sizeof(struct led_device_node));
   \   000055                ; Setup parameters for call to function osal_mem_alloc
   \   000055   7A06         MOV     R2,#0x6
   \   000057   7B00         MOV     R3,#0x0
   \   000059   12....       LCALL   ??osal_mem_alloc?relay
   \   00005C   8A..         MOV     ?V0 + 0,R2
   \   00005E   8B..         MOV     ?V0 + 1,R3
     74                osal_memcpy(np->shortAddr,&source,2);
   \   000060                ; Setup parameters for call to function osal_memcpy
   \   000060   85..82       MOV     DPL,?XSP + 0
   \   000063   85..83       MOV     DPH,?XSP + 1
   \   000066   A982         MOV     R1,DPL
   \   000068   AA83         MOV     R2,DPH
   \   00006A   89..         MOV     ?V0 + 4,R1
   \   00006C   8A..         MOV     ?V0 + 5,R2
   \   00006E   75..00       MOV     ?V0 + 6,#0x0
   \   000071   78..         MOV     R0,#?V0 + 4
   \   000073   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   000076   7C02         MOV     R4,#0x2
   \   000078   7D00         MOV     R5,#0x0
   \   00007A   E5..         MOV     A,?V0 + 0
   \   00007C   2402         ADD     A,#0x2
   \   00007E   FA           MOV     R2,A
   \   00007F   EB           MOV     A,R3
   \   000080   12....       LCALL   ?Subroutine4 & 0xFFFF
   \                     ??CrossCallReturnLabel_2:
   \   000083   12....       LCALL   ?DEALLOC_XSTACK8
     75                np->flag[0]=pData[0];
   \   000086   8E82         MOV     DPL,R6
   \   000088   8F83         MOV     DPH,R7
   \   00008A   E0           MOVX    A,@DPTR
   \   00008B   85..82       MOV     DPL,?V0 + 0
   \   00008E   85..83       MOV     DPH,?V0 + 1
   \   000091   A3           INC     DPTR
   \   000092   A3           INC     DPTR
   \   000093   A3           INC     DPTR
   \   000094   A3           INC     DPTR
   \   000095   A3           INC     DPTR
   \   000096   F0           MOVX    @DPTR,A
     76                np->next=ledDeviceHeader.next;//Í·²å
   \   000097   90....       MOV     DPTR,#ledDeviceHeader
   \   00009A   E0           MOVX    A,@DPTR
   \   00009B   F8           MOV     R0,A
   \   00009C   A3           INC     DPTR
   \   00009D   E0           MOVX    A,@DPTR
   \   00009E   F9           MOV     R1,A
   \   00009F   85..82       MOV     DPL,?V0 + 0
   \   0000A2   85..83       MOV     DPH,?V0 + 1
   \   0000A5   E8           MOV     A,R0
   \   0000A6   F0           MOVX    @DPTR,A
   \   0000A7   A3           INC     DPTR
   \   0000A8   E9           MOV     A,R1
   \   0000A9   F0           MOVX    @DPTR,A
     77                ledDeviceHeader.next=np; 
   \   0000AA   90....       MOV     DPTR,#ledDeviceHeader
   \   0000AD   E5..         MOV     A,?V0 + 0
   \   0000AF   F0           MOVX    @DPTR,A
   \   0000B0   A3           INC     DPTR
   \   0000B1   E5..         MOV     A,?V0 + 1
   \   0000B3   F0           MOVX    @DPTR,A
     78                p=np;
   \   0000B4   8027         SJMP    ??zb_ReceiveDataIndication_5
     79              } 
     80              else{
     81                osal_memcpy(p->shortAddr,&source,2);
   \                     ??zb_ReceiveDataIndication_4:
   \   0000B6                ; Setup parameters for call to function osal_memcpy
   \   0000B6   85..82       MOV     DPL,?XSP + 0
   \   0000B9   85..83       MOV     DPH,?XSP + 1
   \   0000BC   A982         MOV     R1,DPL
   \   0000BE   AA83         MOV     R2,DPH
   \   0000C0   89..         MOV     ?V0 + 4,R1
   \   0000C2   8A..         MOV     ?V0 + 5,R2
   \   0000C4   75..00       MOV     ?V0 + 6,#0x0
   \   0000C7   78..         MOV     R0,#?V0 + 4
   \   0000C9   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   0000CC   7C02         MOV     R4,#0x2
   \   0000CE   7D00         MOV     R5,#0x0
   \   0000D0   E5..         MOV     A,?V0 + 0
   \   0000D2   2402         ADD     A,#0x2
   \   0000D4   FA           MOV     R2,A
   \   0000D5   E5..         MOV     A,?V0 + 1
   \   0000D7   12....       LCALL   ?Subroutine4 & 0xFFFF
     82              }
   \                     ??CrossCallReturnLabel_3:
   \   0000DA   12....       LCALL   ?DEALLOC_XSTACK8
     83              sprintf(buf,"Led device come on!,shortAddr=%u,name:=%u",(uint16)p->shortAddr,(uint8)p->flag[0]);//´òÓ¡½ÚµãµØÖ·ºÍ±êÖ¾
   \                     ??zb_ReceiveDataIndication_5:
   \   0000DD                ; Setup parameters for call to function sprintf
   \   0000DD   85..82       MOV     DPL,?V0 + 0
   \   0000E0   85..83       MOV     DPH,?V0 + 1
   \   0000E3   A3           INC     DPTR
   \   0000E4   A3           INC     DPTR
   \   0000E5   A3           INC     DPTR
   \   0000E6   A3           INC     DPTR
   \   0000E7   A3           INC     DPTR
   \   0000E8   E0           MOVX    A,@DPTR
   \   0000E9   F5..         MOV     ?V0 + 2,A
   \   0000EB   75..00       MOV     ?V0 + 3,#0x0
   \   0000EE   78..         MOV     R0,#?V0 + 2
   \   0000F0   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   0000F3   E5..         MOV     A,?V0 + 0
   \   0000F5   2402         ADD     A,#0x2
   \   0000F7   F5..         MOV     ?V0 + 0,A
   \   0000F9   E5..         MOV     A,?V0 + 1
   \   0000FB   3400         ADDC    A,#0x0
   \   0000FD   F5..         MOV     ?V0 + 1,A
   \   0000FF   78..         MOV     R0,#?V0 + 0
   \   000101   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000104   7C..         MOV     R4,#`?<Constant "Led device come on!,s...">` & 0xff
   \   000106   7D..         MOV     R5,#(`?<Constant "Led device come on!,s...">` >> 8) & 0xff
   \   000108   7406         MOV     A,#0x6
   \   00010A   12....       LCALL   ?XSTACK_DISP0_8
   \   00010D   AA82         MOV     R2,DPL
   \   00010F   AB83         MOV     R3,DPH
   \   000111   12....       LCALL   ??sprintf?relay
   \   000114   7404         MOV     A,#0x4
   \   000116   12....       LCALL   ?DEALLOC_XSTACK8
     84              HalUARTWrite(0,buf,osal_strlen(buf));
                                    ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   000119                ; Setup parameters for call to function HalUARTWrite
   \   000119                ; Setup parameters for call to function osal_strlen
   \   000119   7402         MOV     A,#0x2
   \   00011B   12....       LCALL   ?XSTACK_DISP0_8
   \   00011E   12....       LCALL   ?Subroutine1 & 0xFFFF
     85              HalUARTWrite(0,"\r\n",2);
     86            }
   \                     ??CrossCallReturnLabel_4:
   \   000121   7402         MOV     A,#0x2
   \   000123   12....       LCALL   ?XSTACK_DISP0_8
   \   000126   AA82         MOV     R2,DPL
   \   000128   AB83         MOV     R3,DPH
   \   00012A   8073         SJMP    ??zb_ReceiveDataIndication_6
     87          //½ÓÊÕÐÄÌø°üÊý¾Ý
     88            else if(command==HEART_BEAT_CMD_ID) {
   \                     ??zb_ReceiveDataIndication_1:
   \   00012C   7403         MOV     A,#0x3
   \   00012E   6C           XRL     A,R4
   \   00012F   7001         JNZ     ??zb_ReceiveDataIndication_7
   \   000131   ED           MOV     A,R5
   \                     ??zb_ReceiveDataIndication_7:
   \   000132   7050         JNZ     ??zb_ReceiveDataIndication_8
     89              struct led_device_node *p=ledDeviceHeader.next;
   \   000134   90....       MOV     DPTR,#ledDeviceHeader
   \   000137   E0           MOVX    A,@DPTR
   \   000138   FE           MOV     R6,A
   \   000139   A3           INC     DPTR
   \   00013A   E0           MOVX    A,@DPTR
   \   00013B   8003         SJMP    ??CrossCallReturnLabel_0
     90              while(p!=NULL)
     91              {
     92                if( osal_memcmp(&source,p->shortAddr,2)==TRUE)
     93                  break;
     94                else
     95                {
     96                  p=p->next;
   \                     ??zb_ReceiveDataIndication_9:
   \   00013D   12....       LCALL   ?Subroutine3 & 0xFFFF
     97                }
   \                     ??CrossCallReturnLabel_0:
   \   000140   FF           MOV     R7,A
   \   000141   EE           MOV     A,R6
   \   000142   4F           ORL     A,R7
   \   000143   606C         JZ      ??zb_ReceiveDataIndication_10
   \   000145                ; Setup parameters for call to function osal_memcmp
   \   000145   8E82         MOV     DPL,R6
   \   000147   8F83         MOV     DPH,R7
   \   000149   A3           INC     DPTR
   \   00014A   A3           INC     DPTR
   \   00014B   A982         MOV     R1,DPL
   \   00014D   AA83         MOV     R2,DPH
   \   00014F   89..         MOV     ?V0 + 0,R1
   \   000151   8A..         MOV     ?V0 + 1,R2
   \   000153   75..00       MOV     ?V0 + 2,#0x0
   \   000156   78..         MOV     R0,#?V0 + 0
   \   000158   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00015B   7C02         MOV     R4,#0x2
   \   00015D   7D00         MOV     R5,#0x0
   \   00015F   7403         MOV     A,#0x3
   \   000161   12....       LCALL   ?XSTACK_DISP0_8
   \   000164   A982         MOV     R1,DPL
   \   000166   AA83         MOV     R2,DPH
   \   000168   7B00         MOV     R3,#0x0
   \   00016A   12....       LCALL   ??osal_memcmp?relay
   \   00016D   7403         MOV     A,#0x3
   \   00016F   12....       LCALL   ?DEALLOC_XSTACK8
   \   000172   E9           MOV     A,R1
   \   000173   6401         XRL     A,#0x1
   \   000175   8E82         MOV     DPL,R6
   \   000177   8F83         MOV     DPH,R7
   \   000179   70C2         JNZ     ??zb_ReceiveDataIndication_9
     98              } 
     99              if(p!=NULL)
    100              {
    101                p->lostHeartCount=HEART_BEAT_MAX_COUNT;
   \   00017B   A3           INC     DPTR
   \   00017C   A3           INC     DPTR
   \   00017D   A3           INC     DPTR
   \   00017E   A3           INC     DPTR
   \   00017F   7406         MOV     A,#0x6
   \   000181   F0           MOVX    @DPTR,A
   \   000182   802D         SJMP    ??zb_ReceiveDataIndication_10
    102              }
    103            }
    104          //´òÓ¡ÎÂ¶ÈÊý¾Ý
    105            else if(command==TEMPERATURE_BEAT_CMD_ID )
   \                     ??zb_ReceiveDataIndication_8:
   \   000184   7404         MOV     A,#0x4
   \   000186   6C           XRL     A,R4
   \   000187   7001         JNZ     ??zb_ReceiveDataIndication_11
   \   000189   ED           MOV     A,R5
   \                     ??zb_ReceiveDataIndication_11:
   \   00018A   6008         JZ      ??zb_ReceiveDataIndication_12
    106            {
    107             //uint8 buf[20];
    108             HalUARTWrite(0,pData,osal_strlen(pData));
                                                     ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   00018C                ; Setup parameters for call to function HalUARTWrite
   \   00018C                ; Setup parameters for call to function osal_strlen
    109             HalUARTWrite(0,"\r\n",2);
    110            }
    111           //´òÓ¡¹âÇ¿Êý¾Ý
    112            else if(command==LIGHT_BEAT_CMD_ID )
   \   00018C   7405         MOV     A,#0x5
   \   00018E   6C           XRL     A,R4
   \   00018F   7001         JNZ     ??zb_ReceiveDataIndication_13
   \   000191   ED           MOV     A,R5
   \                     ??zb_ReceiveDataIndication_13:
   \   000192   701D         JNZ     ??zb_ReceiveDataIndication_10
    113            {
    114             //uint8 buf[20];
    115             HalUARTWrite(0,pData,osal_strlen(pData));
                                                     ^
Warning[Pe167]: argument of type "unsigned char *" is incompatible with
          parameter of type "char *"
   \   000194                ; Setup parameters for call to function HalUARTWrite
   \   000194                ; Setup parameters for call to function osal_strlen
   \                     ??zb_ReceiveDataIndication_12:
   \   000194   EE           MOV     A,R6
   \   000195   FA           MOV     R2,A
   \   000196   EF           MOV     A,R7
   \   000197   FB           MOV     R3,A
   \   000198   12....       LCALL   ??Subroutine5_0 & 0xFFFF
   \                     ??CrossCallReturnLabel_7:
   \   00019B   EE           MOV     A,R6
   \   00019C   FA           MOV     R2,A
   \   00019D   EF           MOV     A,R7
   \   00019E   FB           MOV     R3,A
   \                     ??zb_ReceiveDataIndication_6:
   \   00019F   7900         MOV     R1,#0x0
   \   0001A1   12....       LCALL   ??HalUARTWrite?relay
    116             HalUARTWrite(0,"\r\n",2);
   \   0001A4                ; Setup parameters for call to function HalUARTWrite
   \   0001A4   7C02         MOV     R4,#0x2
   \   0001A6   7D00         MOV     R5,#0x0
   \   0001A8   7A..         MOV     R2,#`?<Constant "\\r\\n">` & 0xff
   \   0001AA   7B..         MOV     R3,#(`?<Constant "\\r\\n">` >> 8) & 0xff
   \   0001AC   7900         MOV     R1,#0x0
   \   0001AE   12....       LCALL   ??HalUARTWrite?relay
    117            }
    118          }
   \                     ??zb_ReceiveDataIndication_10:
   \   0001B1   7466         MOV     A,#0x66
   \   0001B3                REQUIRE ?Subroutine0
   \   0001B3                ; // Fall through to label ?Subroutine0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   ?DEALLOC_XSTACK8
   \   000003   7F07         MOV     R7,#0x7
   \   000005   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   3400         ADDC    A,#0x0
   \   000002   FB           MOV     R3,A
   \   000003   12....       LCALL   ??osal_memcpy?relay
   \   000006   7403         MOV     A,#0x3
   \   000008   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   AA82         MOV     R2,DPL
   \   000002   AB83         MOV     R3,DPH
   \   000004                REQUIRE ??Subroutine5_0
   \   000004                ; // Fall through to label ??Subroutine5_0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine5_0:
   \   000000   12....       LCALL   ??osal_strlen?relay
   \   000003   EA           MOV     A,R2
   \   000004   FC           MOV     R4,A
   \   000005   EB           MOV     A,R3
   \   000006   FD           MOV     R5,A
   \   000007   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ??Subroutine6_0:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   FE           MOV     R6,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   FF           MOV     R7,A
   \   000005   22           RET

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   E0           MOVX    A,@DPTR
   \   000001   F8           MOV     R0,A
   \   000002   A3           INC     DPTR
   \   000003   E0           MOVX    A,@DPTR
   \   000004   F9           MOV     R1,A
   \   000005   E8           MOV     A,R0
   \   000006   FE           MOV     R6,A
   \   000007   E9           MOV     A,R1
   \   000008   22           RET
    119          
    120          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    121          void zb_AllowBindConfirm( uint16 source )
   \                     zb_AllowBindConfirm:
    122          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    123          }
   \   000000   02....       LJMP    ?BRET
    124          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    125          void zb_HandleKeys( uint8 shift, uint8 keys )
   \                     zb_HandleKeys:
    126          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    127            
    128          }
   \   000000   02....       LJMP    ?BRET
    129          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    130          void zb_BindConfirm( uint16 commandId, uint8 status )
   \                     zb_BindConfirm:
    131          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    132          }
   \   000000   02....       LJMP    ?BRET
    133          
    134          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    135          void zb_StartConfirm( uint8 status )
   \                     zb_StartConfirm:
    136          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 68
   \   000005   74BC         MOV     A,#-0x44
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   E9           MOV     A,R1
   \   00000B   FE           MOV     R6,A
    137            halUARTCfg_t uartcfg;
    138            uartcfg.baudRate=HAL_UART_BR_115200;
   \   00000C   7401         MOV     A,#0x1
   \   00000E   12....       LCALL   ?XSTACK_DISP0_8
   \   000011   7404         MOV     A,#0x4
   \   000013   F0           MOVX    @DPTR,A
    139            uartcfg.flowControl=FALSE;
   \   000014   7402         MOV     A,#0x2
   \   000016   12....       LCALL   ?XSTACK_DISP0_8
   \   000019   E4           CLR     A
   \   00001A   F0           MOVX    @DPTR,A
    140            uartcfg.callBackFunc=uart_receive;
   \   00001B   741B         MOV     A,#0x1b
   \   00001D   12....       LCALL   ?XSTACK_DISP0_8
   \   000020   74..         MOV     A,#??uart_receive?relay & 0xff
   \   000022   F0           MOVX    @DPTR,A
   \   000023   A3           INC     DPTR
   \   000024   74..         MOV     A,#(??uart_receive?relay >> 8) & 0xff
   \   000026   F0           MOVX    @DPTR,A
    141            HalUARTOpen(0,&uartcfg);
   \   000027                ; Setup parameters for call to function HalUARTOpen
   \   000027   85..82       MOV     DPL,?XSP + 0
   \   00002A   85..83       MOV     DPH,?XSP + 1
   \   00002D   AA82         MOV     R2,DPL
   \   00002F   AB83         MOV     R3,DPH
   \   000031   7900         MOV     R1,#0x0
   \   000033   12....       LCALL   ??HalUARTOpen?relay
    142            //´®¿Ú³õÊ¼»¯
    143            if(status==ZSUCCESS)
   \   000036   EE           MOV     A,R6
   \   000037   703A         JNZ     ??zb_StartConfirm_0
    144            {
    145              char buf[]="Coordinator is created successfully!\r\n";
   \   000039   741D         MOV     A,#0x1d
   \   00003B   12....       LCALL   ?XSTACK_DISP0_8
   \   00003E   AC82         MOV     R4,DPL
   \   000040   AD83         MOV     R5,DPH
   \   000042   7583..       MOV     DPH,#(`?<Constant "Coordinator is create...">` >> 8) & 0xff
   \   000045   7582..       MOV     DPL,#`?<Constant "Coordinator is create...">` & 0xff
   \   000048   7427         MOV     A,#0x27
   \   00004A   12....       LCALL   ?MOVE_LONG8_XDATA_XDATA
    146              HalUARTWrite(0,buf,osal_strlen(buf));
                                    ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   00004D                ; Setup parameters for call to function HalUARTWrite
   \   00004D                ; Setup parameters for call to function osal_strlen
   \   00004D   741D         MOV     A,#0x1d
   \   00004F   12....       LCALL   ?XSTACK_DISP0_8
   \   000052   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_5:
   \   000055   741D         MOV     A,#0x1d
   \   000057   12....       LCALL   ?XSTACK_DISP0_8
   \   00005A   AA82         MOV     R2,DPL
   \   00005C   AB83         MOV     R3,DPH
   \   00005E   7900         MOV     R1,#0x0
   \   000060   12....       LCALL   ??HalUARTWrite?relay
    147              osal_start_timerEx(sapi_TaskID,TIMER_TIMEOUT_EVT,2000);
   \   000063                ; Setup parameters for call to function osal_start_timerEx
   \   000063   7CD0         MOV     R4,#-0x30
   \   000065   7D07         MOV     R5,#0x7
   \   000067   7A01         MOV     R2,#0x1
   \   000069   7B00         MOV     R3,#0x0
   \   00006B   90....       MOV     DPTR,#sapi_TaskID
   \   00006E   E0           MOVX    A,@DPTR
   \   00006F   F9           MOV     R1,A
   \   000070   12....       LCALL   ??osal_start_timerEx?relay
    148            }  
    149          }
   \                     ??zb_StartConfirm_0:
   \   000073   7444         MOV     A,#0x44
   \   000075   12....       LCALL   ?DEALLOC_XSTACK8
   \   000078   7F01         MOV     R7,#0x1
   \   00007A   02....       LJMP    ?BANKED_LEAVE_XDATA
    150          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    151          void zb_HandleOsalEvent( uint16 event )
   \                     zb_HandleOsalEvent:
    152          {
   \   000000   74F4         MOV     A,#-0xc
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 12
   \   000005                ; Auto size: 100
   \   000005   749C         MOV     A,#-0x64
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
    153            if(event&TIMER_TIMEOUT_EVT)
   \   00000A   EA           MOV     A,R2
   \   00000B   A2E0         MOV     C,0xE0 /* A   */.0
   \   00000D   4003         JC      $+5
   \   00000F   02....       LJMP    ??zb_HandleOsalEvent_0 & 0xFFFF
    154            {
    155              struct led_device_node *p=ledDeviceHeader.next;
   \   000012   90....       MOV     DPTR,#ledDeviceHeader
   \   000015   12....       LCALL   ??Subroutine6_0 & 0xFFFF
    156              struct led_device_node *pre=ledDeviceHeader.next;
   \                     ??CrossCallReturnLabel_9:
   \   000018   90....       MOV     DPTR,#ledDeviceHeader
   \   00001B   E0           MOVX    A,@DPTR
   \   00001C   F5..         MOV     ?V0 + 0,A
   \   00001E   A3           INC     DPTR
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   F5..         MOV     ?V0 + 1,A
    157              osal_start_timerEx(sapi_TaskID,TIMER_TIMEOUT_EVT,2000);
   \   000022                ; Setup parameters for call to function osal_start_timerEx
   \   000022   7CD0         MOV     R4,#-0x30
   \   000024   7D07         MOV     R5,#0x7
   \   000026   7A01         MOV     R2,#0x1
   \   000028   7B00         MOV     R3,#0x0
   \   00002A   90....       MOV     DPTR,#sapi_TaskID
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   F9           MOV     R1,A
   \   00002F   12....       LCALL   ??osal_start_timerEx?relay
   \   000032   8057         SJMP    ??zb_HandleOsalEvent_1
    158              while(p!=NULL)
    159              {
    160                p->lostHeartCount--;
    161                if(p->lostHeartCount<=0)
    162                {
    163                   char buf[100];
    164                   struct led_device_node *pTmp=p;
   \                     ??zb_HandleOsalEvent_2:
   \   000034   EE           MOV     A,R6
   \   000035   F8           MOV     R0,A
   \   000036   EF           MOV     A,R7
   \   000037   F9           MOV     R1,A
    165                   pre->next=p->next;  
   \   000038   8E82         MOV     DPL,R6
   \   00003A   8F83         MOV     DPH,R7
   \   00003C   E0           MOVX    A,@DPTR
   \   00003D   FA           MOV     R2,A
   \   00003E   A3           INC     DPTR
   \   00003F   E0           MOVX    A,@DPTR
   \   000040   FB           MOV     R3,A
   \   000041   85..82       MOV     DPL,?V0 + 0
   \   000044   85..83       MOV     DPH,?V0 + 1
   \   000047   EA           MOV     A,R2
   \   000048   F0           MOVX    @DPTR,A
   \   000049   A3           INC     DPTR
   \   00004A   EB           MOV     A,R3
   \   00004B   F0           MOVX    @DPTR,A
    166                   p=p->next;
   \   00004C   12....       LCALL   ?Subroutine2 & 0xFFFF
    167                   sprintf(buf,"endpoint:shortAddr=%u is off-line\r\n",(uint16)pTmp->shortAddr);
   \                     ??CrossCallReturnLabel_11:
   \   00004F                ; Setup parameters for call to function sprintf
   \   00004F   E8           MOV     A,R0
   \   000050   2402         ADD     A,#0x2
   \   000052   F5..         MOV     ?V0 + 2,A
   \   000054   E9           MOV     A,R1
   \   000055   3400         ADDC    A,#0x0
   \   000057   F5..         MOV     ?V0 + 3,A
   \   000059   78..         MOV     R0,#?V0 + 2
   \   00005B   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   00005E   7C..         MOV     R4,#`?<Constant "endpoint:shortAddr=%u...">` & 0xff
   \   000060   7D..         MOV     R5,#(`?<Constant "endpoint:shortAddr=%u...">` >> 8) & 0xff
   \   000062   7402         MOV     A,#0x2
   \   000064   12....       LCALL   ?XSTACK_DISP0_8
   \   000067   AA82         MOV     R2,DPL
   \   000069   AB83         MOV     R3,DPH
   \   00006B   12....       LCALL   ??sprintf?relay
   \   00006E   7402         MOV     A,#0x2
   \   000070   12....       LCALL   ?DEALLOC_XSTACK8
    168                   HalUARTWrite(0,buf,osal_strlen(buf));
                                         ^
Warning[Pe167]: argument of type "char *" is incompatible with parameter of
          type "unsigned char *"
   \   000073                ; Setup parameters for call to function HalUARTWrite
   \   000073                ; Setup parameters for call to function osal_strlen
   \   000073   85..82       MOV     DPL,?XSP + 0
   \   000076   85..83       MOV     DPH,?XSP + 1
   \   000079   12....       LCALL   ?Subroutine1 & 0xFFFF
   \                     ??CrossCallReturnLabel_6:
   \   00007C   85..82       MOV     DPL,?XSP + 0
   \   00007F   85..83       MOV     DPH,?XSP + 1
   \   000082   AA82         MOV     R2,DPL
   \   000084   AB83         MOV     R3,DPH
   \   000086   7900         MOV     R1,#0x0
   \   000088   12....       LCALL   ??HalUARTWrite?relay
    169                   continue;
    170                }
   \                     ??zb_HandleOsalEvent_1:
   \   00008B   EE           MOV     A,R6
   \   00008C   4F           ORL     A,R7
   \   00008D   6018         JZ      ??zb_HandleOsalEvent_0
   \   00008F   EE           MOV     A,R6
   \   000090   2404         ADD     A,#0x4
   \   000092   F582         MOV     DPL,A
   \   000094   EF           MOV     A,R7
   \   000095   3400         ADDC    A,#0x0
   \   000097   F583         MOV     DPH,A
   \   000099   E0           MOVX    A,@DPTR
   \   00009A   14           DEC     A
   \   00009B   F0           MOVX    @DPTR,A
   \   00009C   6096         JZ      ??zb_HandleOsalEvent_2
    171                pre=p;
   \   00009E   8E..         MOV     ?V0 + 0,R6
   \   0000A0   8F..         MOV     ?V0 + 1,R7
    172                p=p->next;
   \   0000A2   12....       LCALL   ?Subroutine2 & 0xFFFF
    173              }    
    174            }
   \                     ??CrossCallReturnLabel_12:
   \   0000A5   80E4         SJMP    ??zb_HandleOsalEvent_1
    175          }
   \                     ??zb_HandleOsalEvent_0:
   \   0000A7   7464         MOV     A,#0x64
   \   0000A9   12....       LCALL   ?DEALLOC_XSTACK8
   \   0000AC   7F04         MOV     R7,#0x4
   \   0000AE   02....       LJMP    ?BANKED_LEAVE_XDATA

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   8E82         MOV     DPL,R6
   \   000002   8F83         MOV     DPH,R7
   \   000004                REQUIRE ??Subroutine6_0
   \   000004                ; // Fall through to label ??Subroutine6_0
    176          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    177          void zb_FindDeviceConfirm( uint8 searchType, 
   \                     zb_FindDeviceConfirm:
    178                                    uint8 *searchKey, uint8 *result )
    179          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    180            
    181          }
   \   000000   02....       LJMP    ?BRET
    182          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    183          void uart_receive(uint8 port,uint8 event)
   \                     uart_receive:
    184          {
   \   000000   74F1         MOV     A,#-0xf
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 15
   \   000005                ; Auto size: 5
   \   000005   74FB         MOV     A,#-0x5
   \   000007   12....       LCALL   ?ALLOC_XSTACK8
   \   00000A   8A..         MOV     ?V0 + 1,R2
    185            uint16 dstAddr;
    186            if(event& (HAL_UART_RX_FULL|HAL_UART_RX_ABOUT_FULL|HAL_UART_RX_TIMEOUT))
   \   00000C   7407         MOV     A,#0x7
   \   00000E   55..         ANL     A,?V0 + 1
   \   000010   7003         JNZ     $+5
   \   000012   02....       LJMP    ??uart_receive_0 & 0xFFFF
    187            {
    188              //ÕâÀï²»ÊÇºÜÑÏ½÷£¬²»ÄÜºÜºÃµØ·Ö³öÒ»¸öÂß¼­Êý¾Ý°ü
    189              uint8 buf[3];
    190              struct led_device_node *p=ledDeviceHeader.next;
   \   000015   90....       MOV     DPTR,#ledDeviceHeader
   \   000018   12....       LCALL   ??Subroutine6_0 & 0xFFFF
    191              HalUARTRead(port,buf,2);
   \                     ??CrossCallReturnLabel_10:
   \   00001B                ; Setup parameters for call to function HalUARTRead
   \   00001B   7C02         MOV     R4,#0x2
   \   00001D   7D00         MOV     R5,#0x0
   \   00001F   EC           MOV     A,R4
   \   000020   12....       LCALL   ?XSTACK_DISP0_8
   \   000023   AA82         MOV     R2,DPL
   \   000025   AB83         MOV     R3,DPH
   \   000027   12....       LCALL   ??HalUARTRead?relay
   \   00002A   8004         SJMP    ??uart_receive_1
    192              while(p!=NULL)
    193              {
    194                if(p->flag[0]==buf[0])//Ñ°ÕÒ½Úµã±êÖ¾
    195                    break;
    196                p=p->next;
   \                     ??uart_receive_2:
   \   00002C   12....       LCALL   ?Subroutine3 & 0xFFFF
   \                     ??CrossCallReturnLabel_1:
   \   00002F   FF           MOV     R7,A
   \                     ??uart_receive_1:
   \   000030   EE           MOV     A,R6
   \   000031   4F           ORL     A,R7
   \   000032   607C         JZ      ??uart_receive_0
   \   000034   8E82         MOV     DPL,R6
   \   000036   8F83         MOV     DPH,R7
   \   000038   A3           INC     DPTR
   \   000039   A3           INC     DPTR
   \   00003A   A3           INC     DPTR
   \   00003B   A3           INC     DPTR
   \   00003C   A3           INC     DPTR
   \   00003D   E0           MOVX    A,@DPTR
   \   00003E   F8           MOV     R0,A
   \   00003F   7402         MOV     A,#0x2
   \   000041   12....       LCALL   ?XSTACK_DISP0_8
   \   000044   E0           MOVX    A,@DPTR
   \   000045   68           XRL     A,R0
   \   000046   8E82         MOV     DPL,R6
   \   000048   8F83         MOV     DPH,R7
   \   00004A   70E0         JNZ     ??uart_receive_2
    197              }
    198              if(p!=NULL)
    199              {
    200                osal_memcpy(&dstAddr,p->shortAddr,2);
   \   00004C                ; Setup parameters for call to function osal_memcpy
   \   00004C   A3           INC     DPTR
   \   00004D   A3           INC     DPTR
   \   00004E   A982         MOV     R1,DPL
   \   000050   AA83         MOV     R2,DPH
   \   000052   89..         MOV     ?V0 + 4,R1
   \   000054   8A..         MOV     ?V0 + 5,R2
   \   000056   75..00       MOV     ?V0 + 6,#0x0
   \   000059   78..         MOV     R0,#?V0 + 4
   \   00005B   12....       LCALL   ?PUSH_XSTACK_I_THREE
   \   00005E   7C02         MOV     R4,#0x2
   \   000060   7D00         MOV     R5,#0x0
   \   000062   7403         MOV     A,#0x3
   \   000064   12....       LCALL   ?XSTACK_DISP0_8
   \   000067   AA82         MOV     R2,DPL
   \   000069   AB83         MOV     R3,DPH
   \   00006B   12....       LCALL   ??osal_memcpy?relay
   \   00006E   7403         MOV     A,#0x3
   \   000070   12....       LCALL   ?DEALLOC_XSTACK8
    201                zb_SendDataRequest(dstAddr,TOGGLE_LED_CMD_ID,
    202                                 2,buf,0,FALSE,AF_DEFAULT_RADIUS);
   \   000073                ; Setup parameters for call to function zb_SendDataRequest
   \   000073   75..1E       MOV     ?V0 + 2,#0x1e
   \   000076   78..         MOV     R0,#?V0 + 2
   \   000078   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   00007B   75..00       MOV     ?V0 + 2,#0x0
   \   00007E   78..         MOV     R0,#?V0 + 2
   \   000080   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000083   78..         MOV     R0,#?V0 + 2
   \   000085   12....       LCALL   ?PUSH_XSTACK_I_ONE
   \   000088   7405         MOV     A,#0x5
   \   00008A   12....       LCALL   ?XSTACK_DISP0_8
   \   00008D   8582..       MOV     ?V0 + 2,DPL
   \   000090   8583..       MOV     ?V0 + 3,DPH
   \   000093   78..         MOV     R0,#?V0 + 2
   \   000095   12....       LCALL   ?PUSH_XSTACK_I_TWO
   \   000098   7902         MOV     R1,#0x2
   \   00009A   7C02         MOV     R4,#0x2
   \   00009C   7D00         MOV     R5,#0x0
   \   00009E   7405         MOV     A,#0x5
   \   0000A0   12....       LCALL   ?XSTACK_DISP0_8
   \   0000A3   E0           MOVX    A,@DPTR
   \   0000A4   FA           MOV     R2,A
   \   0000A5   A3           INC     DPTR
   \   0000A6   E0           MOVX    A,@DPTR
   \   0000A7   FB           MOV     R3,A
   \   0000A8   12....       LCALL   ??zb_SendDataRequest?relay
   \   0000AB   7405         MOV     A,#0x5
   \   0000AD   12....       LCALL   ?DEALLOC_XSTACK8
    203              }
    204              
    205              
    206            }  
    207          }
   \                     ??uart_receive_0:
   \   0000B0   7405         MOV     A,#0x5
   \   0000B2   02....       LJMP    ?Subroutine0 & 0xFFFF

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zb_SendDataConfirm?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zb_SendDataConfirm

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zb_ReceiveDataIndication?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zb_ReceiveDataIndication

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zb_AllowBindConfirm?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zb_AllowBindConfirm

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zb_HandleKeys?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zb_HandleKeys

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zb_BindConfirm?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zb_BindConfirm

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zb_StartConfirm?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zb_StartConfirm

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zb_HandleOsalEvent?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zb_HandleOsalEvent

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??zb_FindDeviceConfirm?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    zb_FindDeviceConfirm

   \                                 In  segment BANK_RELAYS, align 1
   \                     ??uart_receive?relay:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    uart_receive

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Led device come on!,s...">`:
   \   000000   4C656420     DB "Led device come on!,shortAddr=%u,name:=%u"
   \            64657669
   \            63652063
   \            6F6D6520
   \            6F6E212C
   \            73686F72
   \            74416464
   \            723D2575
   \            2C6E616D
   \            653A3D25
   \            7500    

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "\\r\\n">`:
   \   000000   0D0A00       DB "\015\012"

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "Coordinator is create...">`:
   \   000000   436F6F72     DB "Coordinator is created successfully!\015\012"
   \            64696E61
   \            746F7220
   \            69732063
   \            72656174
   \            65642073
   \            75636365
   \            73736675
   \            6C6C7921
   \            0D0A00  

   \                                 In  segment XDATA_ROM_C, align 1
   \                     `?<Constant "endpoint:shortAddr=%u...">`:
   \   000000   656E6470     DB "endpoint:shortAddr=%u is off-line\015\012"
   \            6F696E74
   \            3A73686F
   \            72744164
   \            64723D25
   \            75206973
   \            206F6666
   \            2D6C696E
   \            650D0A00

   Maximum stack usage in bytes:

     Function                 ISTACK PSTACK XSTACK
     --------                 ------ ------ ------
     uart_receive                 0      0     25
       -> HalUARTRead             0      0     40
       -> osal_memcpy             0      0     46
       -> zb_SendDataRequest      0      0     50
     zb_AllowBindConfirm          0      0      0
     zb_BindConfirm               0      0      0
     zb_FindDeviceConfirm         0      0      0
     zb_HandleKeys                0      0      0
     zb_HandleOsalEvent           0      0    114
       -> osal_start_timerEx      0      0    224
       -> sprintf                 0      0    228
       -> osal_strlen             0      0    224
       -> HalUARTWrite            0      0    224
     zb_ReceiveDataIndication     1      0    125
       -> osal_mem_alloc          0      0    234
       -> osal_memcpy             0      0    240
       -> osal_memcpy             0      0    240
       -> sprintf                 0      0    242
       -> osal_strlen             0      0    234
       -> HalUARTWrite            0      0    234
       -> HalUARTWrite            0      0    234
       -> osal_memcmp             0      0    240
       -> osal_strlen             0      0    234
       -> HalUARTWrite            0      0    234
       -> HalUARTWrite            0      0    234
       -> osal_strlen             0      0    234
       -> HalUARTWrite            0      0    234
       -> HalUARTWrite            0      0    234
     zb_SendDataConfirm           0      0      0
     zb_StartConfirm              2      0     77
       -> HalUARTOpen             0      0    154
       -> osal_strlen             0      0    154
       -> HalUARTWrite            0      0    154
       -> osal_start_timerEx      0      0    154


   Segment part sizes:

     Function/Label                         Bytes
     --------------                         -----
     coordinatorInputCommandList               8
     coordinatorOutputCommandList              2
     ledDeviceHeader                           6
     zb_SimpleDesc                            12
     zb_SendDataConfirm                        3
     zb_ReceiveDataIndication                435
     ?Subroutine0                              8
     ?Subroutine4                              9
     ?Subroutine1                              4
     ??Subroutine5_0                           8
     ??Subroutine6_0                           6
     ?Subroutine3                              9
     zb_AllowBindConfirm                       3
     zb_HandleKeys                             3
     zb_BindConfirm                            3
     zb_StartConfirm                         125
     zb_HandleOsalEvent                      177
     ?Subroutine2                              4
     zb_FindDeviceConfirm                      3
     uart_receive                            181
     ??zb_SendDataConfirm?relay                6
     ??zb_ReceiveDataIndication?relay          6
     ??zb_AllowBindConfirm?relay               6
     ??zb_HandleKeys?relay                     6
     ??zb_BindConfirm?relay                    6
     ??zb_StartConfirm?relay                   6
     ??zb_HandleOsalEvent?relay                6
     ??zb_FindDeviceConfirm?relay              6
     ??uart_receive?relay                      6
     ?<Constant "Led device come on!,s...">   42
     ?<Constant "\r\n">                        3
     ?<Constant "Coordinator is create...">   39
     ?<Constant "endpoint:shortAddr=%u...">   36

 
 981 bytes in segment BANKED_CODE
  54 bytes in segment BANK_RELAYS
 142 bytes in segment XDATA_ROM_C
   6 bytes in segment XDATA_Z
 
 1 035 bytes of CODE  memory
   142 bytes of CONST memory
     6 bytes of XDATA memory

Errors: none
Warnings: 5
